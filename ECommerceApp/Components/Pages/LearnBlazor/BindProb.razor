@page "/bindProb"
@rendermode InteractiveServer

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        IsActive: <input type="checkbox" @bind-value="@product.IsActive" />
        Price: @product.Price <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" />
         <br />

        <select @bind="@Selectedvalue">
            <option selected> Select type</option>
            @foreach (var item in product.ProductProperties)
            {

                <option value="@item.Key">@item.Value</option>

            }
        </select>
    </div>    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        Name: @product.Name<br/>
        IsActive: @product.IsActive<br/>
        Price: @product.Price <br/>
        This product is : @(product.IsActive? "Acive":"InActive")
        @if (!String.IsNullOrEmpty(Selectedvalue))
        {
            <p> Selected value: @product.ProductProperties.FirstOrDefault(x => x.Key == Selectedvalue).Value </p>

        }
    </div>
    <div class="col-12 p-4">
        <h2 class="text-success"> Product Table</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <td>Product Name</td>
                    <td>Price</td>
                    <td>Is Active</td>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in products)
                {
                    <tr>
                        <td><input type="text" @bind-value="@item.Name" @bind-value:event="oninput"/> </td>
                        <td><input type="text" @bind-value="@item.Price" @bind-value:event="oninput" /> </td>
                        <td><input type="checkbox" @bind-value="@item.IsActive" @bind-value:event="oninput" /> </td>
                    </tr>
                }
            </tbody>
        </table>
        <br/>
        <h2>Product Summary</h2>
        @foreach (var prod in products)
        {
            <p>@prod.Name [@prod.Price] is @(prod.IsActive?"Active":"InActive")</p>
        }
    </div>
</div>






@code {
    private string Selectedvalue = "";
    Product product = new()
        {

            Id = 1,
            Name = "This my first 1",
            IsActive = true,
            Price=5,
            ProductProperties=new List<Product_Prop>()
            {
                 new Product_Prop{Id=1,Key="Color", Value="Red"},
                 new Product_Prop{Id=1,Key="Size", Value="2c"},
                 new Product_Prop{Id=1,Key="Flavor", Value="Rose"},
            }
        };


    List<Product> products = new List<Product>();
    protected override void OnInitialized()
    {
         products.Add (new()
            {

                Id = 1,
                Name = "This my first 1",
                IsActive = true,
                Price = 5,
                ProductProperties = new List<Product_Prop>()
            {
                 new Product_Prop{Id=1,Key="Color", Value="Red"},
                 new Product_Prop{Id=1,Key="Size", Value="2c"},
                 new Product_Prop{Id=1,Key="Flavor", Value="Rose"},
            }
            });

        products.Add(new()
            {

                Id = 2,
                Name = "This second product",
                IsActive = true,
                Price = 2,
                ProductProperties = new List<Product_Prop>()
            {
                 new Product_Prop{Id=1,Key="Color", Value="blue"},
                 new Product_Prop{Id=1,Key="Size", Value="50"},
                 new Product_Prop{Id=1,Key="Flavor", Value="Chambaili"},
            }
            });
        base.OnInitialized();
    }

}
